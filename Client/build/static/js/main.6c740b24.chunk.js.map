{"version":3,"sources":["UserPage.js","UserAttachmentPage.js","serviceWorker.js","index.js"],"names":["UserPage","state","users","newUserModal","newUserData","name","lastname","email","username","axios","get","then","response","setState","data","catch","error","console","log","alert","post","this","push","id","delete","_RefreshUsers","map","user","key","href","Button","color","onClick","DeleteUser","bind","className","toggleNewUserModal","Modal","isOpen","toggle","ModalHeader","ModalBody","FormGroup","Label","for","Input","type","value","placeholder","onChange","e","target","ModalFooter","AddUser","Table","length","colspan","Component","UserAttachmentPage","attachments","newAttachmentModal","props","match","params","upload_type","formData","FormData","imagefile","document","querySelector","append","files","is_s3","headers","_RefreshAttachments","attachment","file_name","date","DeleteAttachment","toggleNewAttachmentModal","AddAttachment","Boolean","window","location","hostname","ReactDOM","render","StrictMode","exact","path","component","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.6c740b24.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport {Table,Label,Input,FormGroup,Button, Modal, ModalHeader, ModalBody, ModalFooter} from 'reactstrap'\nimport axios from 'axios'\n\nclass UserPage extends Component{\n  state = {\n    users: [],\n    newUserModal:false,\n    newUserData:{\n      name:\"\",\n      lastname:\"\",\n      email:\"\",\n      username:\"\"\n    }\n  }\n  componentWillMount() {\n    axios.get('/user-api/users').then((response)=>{\n      this.setState({\n        users:response.data\n      })\n    }).catch( (error) =>{\n      console.log(error.response)\n      alert(\"Error - \" + error.response.data.error)\n    });\n  }\n  _RefreshUsers(){\n    axios.get('/user-api/users').then((response)=>{\n      this.setState({\n        users:response.data\n      })\n    }).catch( (error) =>{\n      console.log(error.response)\n      alert(\"Error - \" + error.response.data.error)\n    });\n  }\n  AddUser() {\n    axios.post('/user-api/user',this.state.newUserData).then((response)=>{\n      let {users} = this.state;\n      users.push(response.data);\n      this.setState({\n        users,\n        newUserModal:false,\n        newUserData:{\n          name:\"\",\n          lastname:\"\",\n          email:\"\",\n          username:\"\"\n        }\n      })\n      console.log(response.data);\n    }).catch( (error) =>{\n      console.log(error.response)\n      alert(\"Error - \" + error.response.data.error)\n    });\n  }\n  toggleNewUserModal(){\n    this.setState({\n      newUserModal:!this.state.newUserModal\n    });\n  }\n  DeleteUser(id){\n    axios.delete('/user-api/user/'+id).then((response=>{\n      console.log(response)\n      this._RefreshUsers()\n    })).catch( (error) =>{\n      console.log(error.response)\n      alert(\"Error - \" + error.response.data.error)\n    })\n  }\n  render(){\n    let users =this.state.users.map((user) =>{\n      return(\n        <tr key={user.id}>\n          <td>{user.id}</td>\n          <td><a  href={`/user/${user.username}/attachments`}>{user.username}</a></td>\n          <td>{user.name}</td>\n          <td>{user.lastname}</td>\n          <td>{user.email}</td>\n          <td> <Button color=\"primary\" onClick={this.DeleteUser.bind(this,user.id)}>X</Button></td>\n        </tr>\n      )\n    });\n    return (\n      <div className=\"App\">\n      <Button color=\"primary\" onClick={this.toggleNewUserModal.bind(this)}>Add User</Button>\n      <a href='/'><Button color=\"secondary\">Home</Button></a>\n      <Modal isOpen={this.state.newUserModal} toggle={this.toggleNewUserModal.bind(this)}>\n        <ModalHeader toggle={this.toggleNewUserModal.bind(this)}>Create new user</ModalHeader>\n        <ModalBody>\n         <FormGroup>\n          <Label for=\"name\">First Name</Label>\n          <Input type=\"text\" name=\"firstname\" id=\"firstname\" value={this.state.newUserData.name} placeholder=\"First Name\" onChange={\n            (e)=>{\n              let {newUserData} = this.state;\n              newUserData.name=e.target.value;\n              this.setState({newUserData})\n            }\n          }></Input>\n         </FormGroup>\n         <FormGroup>\n          <Label for=\"lastname\">Last Name</Label>\n          <Input type=\"text\" name=\"lastname\" id=\"lastname\" placeholder=\"Last Name\" value={this.state.newUserData.lastname} onChange={\n            (e)=>{\n              let {newUserData} = this.state;\n              newUserData.lastname=e.target.value;\n              this.setState({newUserData})\n            }\n          }></Input>\n         </FormGroup>\n         <FormGroup>\n          <Label for=\"email\">Email</Label>\n          <Input type=\"email\" name=\"email\" id=\"email\" placeholder=\"Email\" value={this.state.newUserData.email} onChange={\n            (e)=>{\n              let {newUserData} = this.state;\n              newUserData.email=e.target.value;\n              this.setState({newUserData})\n            }\n          }></Input>\n         </FormGroup>\n         <FormGroup>\n          <Label for=\"username\">Username</Label>\n          <Input type=\"text\" name=\"username\" id=\"username\" placeholder=\"Username\" value={this.state.newUserData.username} onChange={\n            (e)=>{\n              let {newUserData} = this.state;\n              newUserData.username=e.target.value;\n              this.setState({newUserData})\n            }\n          }></Input>   \n         </FormGroup>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"primary\" onClick={this.AddUser.bind(this)}>Create User</Button>{' '}\n          <Button color=\"secondary\" onClick={this.toggleNewUserModal.bind(this)}>Cancel</Button>\n        </ModalFooter>\n      </Modal>\n        <Table>\n          <thead>\n            <tr>\n              <th>#</th>\n              <th>Username</th>\n              <th>FirstName</th>\n              <th>LastName</th>\n              <th>Email</th>\n            </tr>\n          </thead>\n          <tbody>\n          {users.length ? users : <div><tr><td colspan={4}>No Users found!</td></tr></div>}\n          </tbody>\n        </Table>\n      </div>\n    );\n  }\n}\n\nexport default UserPage;\n","import React, {Component} from 'react'\r\nimport {Table,Label,Input,FormGroup,Button, Modal, ModalHeader, ModalBody, ModalFooter} from 'reactstrap'\r\nimport axios from 'axios'\r\n\r\nclass UserAttachmentPage extends Component{\r\n    state = {\r\n        attachments: [],\r\n        newAttachmentModal:false,\r\n\r\n      }\r\n    componentWillMount() {\r\n        axios.get('/user-files/attachments/'+this.props.match.params.username).then((response)=>{\r\n          this.setState({\r\n            attachments:response.data\r\n          })\r\n        }).catch( (error) =>{\r\n            console.log(error.response)\r\n            alert(\"Error - \" + error.response.data.error)\r\n          });\r\n      }\r\n    toggleNewAttachmentModal(){\r\n        this.setState({\r\n            newAttachmentModal:!this.state.newAttachmentModal\r\n        });\r\n    }\r\n      _RefreshAttachments(){\r\n        axios.get('/user-files/attachments/'+this.props.match.params.username).then((response)=>{\r\n          this.setState({\r\n            attachments:response.data\r\n          })\r\n        }).catch( (error) =>{\r\n            console.log(error.response)\r\n            alert(\"Error - \" + error.response.data.error)\r\n          });\r\n      }\r\n\r\n      AddAttachment(upload_type) {\r\n        var formData = new FormData();\r\n        var imagefile = document.querySelector('#file');\r\n        formData.append(\"file\", imagefile.files[0]);\r\n        var is_s3 = \"\"\r\n        if (upload_type != \"\") {\r\n            is_s3=\"/\"+upload_type\r\n        }\r\n        axios.post('/user-files/attachment/'+this.props.match.params.username+is_s3,formData,{\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n              }\r\n        }).then((response)=>{\r\n          console.log(response);\r\n          this._RefreshAttachments();\r\n          this.setState({\r\n              newAttachmentModal:false\r\n          })\r\n        }).catch( (error) =>{\r\n            console.log(error.response)\r\n            alert(\"Error - \" + error.response.data.error)\r\n          });\r\n      }\r\n      DeleteAttachment(id){\r\n        axios.delete('/user-files/attachment/'+id).then((response=>{\r\n          console.log(response.data)\r\n          this._RefreshAttachments()\r\n        })).catch( (error) =>{\r\n            console.log(error.response)\r\n            alert(\"Error - \" + error.response.data.error)\r\n          })\r\n      }\r\n      render(){\r\n        let attachments =this.state.attachments.map((attachment) =>{\r\n          return(\r\n            <tr key={attachment.id}>\r\n              <td>{attachment.id}</td>\r\n              <td><a target='_blank' href={'/user-files/attachment/' + attachment.id + \"/get\" }>{attachment.file_name}</a></td>\r\n              <td>{attachment.date}</td>\r\n              <td>{attachment.upload_type}</td>\r\n              <td> <Button color=\"primary\" onClick={this.DeleteAttachment.bind(this,attachment.id)}>X</Button></td>\r\n            </tr>\r\n          )\r\n        });\r\n        return (\r\n          <div className=\"App\">\r\n          <Button color=\"primary\" onClick={this.toggleNewAttachmentModal.bind(this)}>Upload file</Button>\r\n          <a href='/'><Button color=\"secondary\">Home</Button></a>\r\n          <a href='/users'><Button color=\"secondary\">Users</Button></a>\r\n          <Modal isOpen={this.state.newAttachmentModal} toggle={this.toggleNewAttachmentModal.bind(this)}>\r\n            <ModalHeader toggle={this.toggleNewAttachmentModal.bind(this)}>Upload new file</ModalHeader>\r\n            <ModalBody>\r\n             <FormGroup>\r\n              <Label for=\"name\">Choose File</Label>\r\n              <Input type=\"file\" name=\"file\" id=\"file\" ></Input>\r\n             </FormGroup>\r\n            </ModalBody>\r\n            <ModalFooter>\r\n              <Button color=\"primary\" onClick={this.AddAttachment.bind(this,\"\")}>Upload File (FS)</Button>{' '}\r\n              <Button color=\"primary\" onClick={this.AddAttachment.bind(this,\"s3\")}>Upload File (S3)</Button>{' '}\r\n              <Button color=\"secondary\" onClick={this.toggleNewAttachmentModal.bind(this)}>Cancel</Button>\r\n            </ModalFooter>\r\n          </Modal>\r\n            <Table>\r\n              <thead>\r\n                <tr>\r\n                  <th>#</th>\r\n                  <th>Filename</th>\r\n                  <th>Last Updated</th>\r\n                  <th> Upload Type</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n              {attachments.length ? attachments : <div><tr><td colspan={4}>No Attachments found!</td></tr></div>}\r\n              </tbody>\r\n            </Table>\r\n          </div>\r\n        );\r\n      }\r\n}\r\n\r\nexport default UserAttachmentPage;\r\n\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter as Router,Route} from 'react-router-dom'\nimport {Button} from 'reactstrap'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './index.css';\nimport UserPage from './UserPage';\nimport UserAttachmentPage from './UserAttachmentPage';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <Route exact={true} path=\"/\" render={() => (\n        <div>\n          <h1> Fileshare App</h1>\n          <a href='/users'><Button color=\"secondary\">Users</Button></a>\n        </div>\n      )}/>\n      <Route path=\"/users\" component={UserPage}/>\n      <Route path=\"/user/:username/attachments\" component={UserAttachmentPage}/>\n      {/* <Route render={ ()=> (\n        <h1> 404 - not found</h1>\n      )} /> */}\n    </Router>\n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}